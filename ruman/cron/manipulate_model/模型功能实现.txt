2018.5.4
version 0.0.1
作者：李丰志于北京航空航天大学A730

功能：基于xgboost的股市操纵模型

包含文件：createframe.py，create.py，calculate.py，deal.py，train.py

createframe.py   制造历史及每天的数据框，并转化为json存于dataframe文件夹
create.py        提供所需数据表并调用createframe.py
calculate.py     提供历史及每天的不同类型数据的处理方法，将数据格式进行转换
deal.py          进行历史及每天数据的删除、增添、标准化操作
train.py         利用历史数据训练模型，利用每天数据预测并将结果存入数据库

伪市值所需数据：股价、私募、对外投资公告、股票质押公告、增减持公告、大宗交易
高送转所需数据：股价、换手率、股票质押公告、增减持公告、利润分配公告、大宗交易、解禁、净利润、机构持股比例、前十大股东持股比例

createframe.py

提供函数：

get_sql_frame_bendi_day   输入表名列名及日期以获得对应时间的数据框，针对日度数据。
生成的数据框格式为：列为3000家上市公司，行为日期。对于非换手率收益率，空值为0；对于换手率收益率空值或0值均为None

get_quarter_list   输入对应季度，输出对应季度初第一天的日期列表，例如['2015-01-01','2015-04-01']，用于get_sql_frame_bendi_quarter  对于净利润，空值为nan，其余两项为0

get_sql_frame_bendi_quarter   输入表名列名及季度以获得对应季度的数据框，针对季度数据。
生成的数据框格式为：列为3000家上市公司，行为季度初的第一天

get_sql_frame_bendi_jiejin   输入表名列名及日期以获得对应时间的数据框，针对日度解禁数据。
生成的数据框格式为：列为3000家上市公司，行为日期，解禁日期特殊的格式故需要特殊处理，但生成的数据框格式与普通日度数据相同且已处理好。

get_sql_frame_bendi_holders   输入表名列名及日期以获得对应时间的数据框，针对日度股东数据。
形式依旧相同，但因为将会存于es而不同的处理方式。

get_sql_frame_day_theday   相对应的日度数据的每日更新，但只会在交易日运行

get_sql_frame_quarter_theday   相对应的季度数据的每日更新，但只会在每季度初的第一天运行，对于净利润，在每季度初的第一天更新前两季度的数据

get_sql_frame_jiejin_theday   相对应的日度数据的每日更新，但只会在交易日运行


create.py

提供函数：

get_frame   从createframe导入历史数据计算的函数进行生成

get_frame_theday   从createframe导入每日更新数据计算的函数进行生成


calculate.py

提供函数：（这里的天均为交易日）

what_quarter   判断一天的季度对应的前一季度，前两季度及当季的第一天日期并输出列表

one2six_frame类：

other_towhatday   计算除收益率、换手率、私募、解禁及季度数据以外的其他数据的处理方式。处理方式为对于给出的天数n，n天前之内所有的天数并加和，操作数据框是是以行为单位操作的。

market_towhatday   计算收益率及换手率，收益率为该天的自然对数减去n天前的自然对数；换手率为该天换手率除以n天前换手率减1。存在空值计算后仍为空值。

simu   计算对应私募数变化，为当天日期十大股东机构投资者减去60天前的机构投资者数。

jiejin_quarter   解禁数据已处理好在此不处理，但为季度数据提供日期数据；季度数据不含日期，于是借用日期数据判断对应季度。因为净利润数据发布的延后性，故选取对应前两季度与前三季度的变化率为净利润变化率，空值设为零；其他季度数据只取当季度数据并变为小数形式，空值设为零。


one2six_frame_theday类：
同上述，但只取对应日期前251个交易日的数据以供计算，算法相同

get_all   输入不同类别及对应日期以输出对应操纵类型的历史数据框。对于普通日度数据选取1,5,20,60,125,250六个时间区间进行计算，分别得出对应时间区段的大数据框，建立新的数据框，一行对应一个公司一天的所有指标数据。伪市值为6*5+1+2 = 33列，3个公告1个大宗交易1个股价1个私募外加时间股票代码。高送转为6*6+4+2 = 42列，3个公告1个大宗交易1个股价1个换手率4个季度数据外加时间股票代码。

get_all_theday   对应每日更新用于预测的数据集，算法相同，输入为不同类别及对应当天日

deal.py

提供函数：

delete   删除对应前一天换手率变化率和对数收益率为空的行，对于前一天两率不为空的行，若后面有为空的值，则与前值相同进行补齐。

add   加入所有公告和的1,5,20,60,125,250六个时间区间的数据，再加入对应换手率变化率和对数收益率中最大的两列，伪市值因此总列数为33+6+1 = 40列；高送转总列数为42+6+2 = 50列

standard   对于同一天的同一中级行业的所有值进行标准化操作，即先算平均值，再全部减去平均值

get_black_list   获得对应类别黑名单代码列表

get_all_list   获得监控名单代码列表

filter   对于历史数据，先找出黑名单的所有行业及所含的公司及对应行业黑名单所对应的操纵期，再对于行业中的所有代码的操纵期内每一天进行删除、增添和标准化操作，并进行重新拼接得到新的数据集，数据集结构与处理之前相同。

filter_theday   对应日度更新用于预测的数据集的生成，但计算的是所有监控名单的对应数据，时间也为预测当天。

deal_data   历史数据函数，整合成一个函数

deal_data_theday   每日数据函数，整合成一个函数


train.py

提供函数：

get_training_data   得到对应类别给定日期之间的所有训练数据的数据集，并根据黑名单及其操纵时间给对应行加上标签1以用于训练。

training   利用xgboost模型分别训练两个模型并存储

train   整合两个类别的操纵共同训练，训练时间对应各自的操纵期以减少训练时间，因为最后处理后的数据只包含操纵期的数据。

predict   先进行预测当天的数据更新（因为以后需要每天运行所以必须这么做）；再利用刚更新的数据进行预测，并将预测得出的概率和结果存储于数据库，这里概率大于等于0.5认为是操纵。其中可能存在一个公司被同时认定为多类的情况，这时哪种操纵的概率高就取哪一类，如果真的有概率也相同就随机取其中一类。

